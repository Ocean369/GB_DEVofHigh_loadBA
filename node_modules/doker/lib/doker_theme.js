// Generated by CoffeeScript 1.9.3
(function() {
  var DokerTheme;

  DokerTheme = (function() {
    function DokerTheme(options) {
      if (options == null) {
        options = {};
      }
      this.options = {
        sans: {
          regular: "Helvetica",
          bold: "Helvetica-Bold",
          italic: "Helvetica-Oblique",
          boldItalic: "Helvetica-BoldOblique"
        },
        serif: {
          regular: "Times-Roman",
          bold: "Times-Bold",
          italic: "Times-Italic",
          boldItalic: "Times-BoldItalic"
        },
        mono: {
          regular: "Courier",
          bold: "Courier-Bold",
          italic: "Courier-Oblique",
          boldItalic: "Courier-BoldOblique"
        },
        title: {
          font: 'sans',
          fontSize: 48,
          underline: true
        },
        subtitle: {
          font: 'sans',
          fontSize: 32
        },
        h1: {
          newPage: true,
          font: 'sans',
          fontSize: 32,
          after: 0.5
        },
        h2: {
          font: 'sans',
          fontSize: 24,
          after: 0.2
        },
        h3: {
          font: 'sans',
          fontSize: 18,
          after: 0.2
        },
        p: {
          font: 'serif',
          fontSize: 12,
          after: 0.7
        },
        list: {
          bullets: '|>*o-',
          after: 0.7
        },
        listItem: {
          indent: 15
        },
        code: {
          font: 'mono',
          fontSize: 10,
          indent: 10,
          after: 0.7
        },
        link: {
          color: '#0000cc'
        },
        pageNumber: {
          font: 'sans',
          fontSize: 14,
          hposition: 'center',
          vposition: 'bottom',
          dy: 30
        },
        typography: {
          lapostrophe: '\u2018',
          rapostrophe: '\u2019',
          lquote: '\u201c',
          rquote: '\u201d'
        },
        toc: {
          h1: {
            font: 'sans',
            fontSize: 18,
            delimiter: '.'
          },
          h2: {
            font: 'serif',
            fontSize: 14,
            indent: 15
          },
          h3: {
            font: 'serif',
            fontSize: 14,
            indent: 15
          }
        }
      };
      this.mergeOptions(this.options, options);
      this._elements = [];
      this._currentFont = {
        style: 'regular'
      };
      this._fontStyles = [];
    }

    DokerTheme.prototype.mergeOptions = function(dest, src) {
      var k, results, v;
      results = [];
      for (k in src) {
        v = src[k];
        if (typeof v === 'object' && dest.hasOwnProperty(k)) {
          results.push(this.mergeOptions(dest[k], v));
        } else {
          results.push(dest[k] = v);
        }
      }
      return results;
    };

    DokerTheme.prototype.setDocument = function(document) {
      return this.document = document;
    };

    DokerTheme.prototype.apply = function(element) {
      var k, options, v;
      if (element != null) {
        this.currentElement = element;
      }
      if (!((this.currentElement != null) || this.options.hasOwnProperty(this.currentElement))) {
        return;
      }
      options = eval('this.options.' + this.currentElement);
      for (k in options) {
        v = options[k];
        switch (k) {
          case 'font':
            this._currentFont = this.options[v];
            this.document.font(this._currentFont.regular);
            break;
          case 'fontSize':
            this.document.fontSize(v);
            break;
          case 'color':
            this.document.fillColor(v);
        }
      }
      if (options.color == null) {
        this.document.fillColor('black');
      }
      if (options.before != null) {
        this.document.moveDown(options.before);
      }
      return options;
    };

    DokerTheme.prototype.save = function() {
      return this._elements.push(this.currentElement);
    };

    DokerTheme.prototype.restore = function() {
      return this.apply(this._elements.pop());
    };

    DokerTheme.prototype.setBoldFont = function() {
      var base;
      if ((base = this._currentFont).style == null) {
        base.style = 'regular';
      }
      this._fontStyles.push(this._currentFont.style);
      if (this._currentFont.style === 'italic') {
        if (this._currentFont.boldItalic != null) {
          this.document.font(this._currentFont.boldItalic);
        }
      } else {
        if (this._currentFont.bold != null) {
          this.document.font(this._currentFont.bold);
        }
      }
      return this._currentFont.style = 'bold';
    };

    DokerTheme.prototype.setItalicFont = function() {
      var base;
      if ((base = this._currentFont).style == null) {
        base.style = 'regular';
      }
      this._fontStyles.push(this._currentFont.style);
      if (this._currentFont.style === 'bold') {
        if (this._currentFont.boldItalic != null) {
          this.document.font(this._currentFont.boldItalic);
        }
      } else {
        if (this._currentFont.italic != null) {
          this.document.font(this._currentFont.italic);
        }
      }
      return this._currentFont.style = 'italic';
    };

    DokerTheme.prototype.setMonoFont = function() {
      if (this.options.mono != null) {
        return this.document.font(this.options.mono.regular);
      }
    };

    DokerTheme.prototype.restoreFont = function() {
      this._currentFont.style = this._fontStyles.pop();
      if (this._currentFont.style === 'bold') {
        return this.document.font(this._currentFont.bold);
      } else if (this._currentFont.style === 'italic') {
        return this.document.font(this._currentFont.italic);
      } else {
        return this.document.font(this._currentFont.regular);
      }
    };

    return DokerTheme;

  })();

  module.exports = DokerTheme;

}).call(this);
